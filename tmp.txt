def options_getHistData(breezeObj, interval, tickerSym, exchangeCode, fromDate, toDate, expDate, right, strikePrice):
    intervals_dict = {"1second":1,"1minute":60,"5minute":300,"30minute":1800,"1day":86400}
    timeA = datetime.datetime.strptime(fromDate, "%d:%m:%Y:%H:%M:%S")
    timeB = datetime.datetime.strptime(toDate, "%d:%m:%Y:%H:%M:%S")
    candles_list = []
    if timeA > timeB:
        raise Exception('error: fromDate is later than toDate!')
    deltaTime = timeB - timeA
    num_candles = deltaTime.seconds // intervals_dict[interval]
    if num_candles < 1:
        raise Exception('error: Date/Time range too small!!')
    else:
        print('getting {} candles from {} to {} at intervals of {}'.format(num_candles,fromDate, toDate, interval))
        if num_candles <= 1000:
            try:
                result = breezeObj.get_historical_data_v2(interval,
                from_date=convDate(fromDate),to_date=convDate(toDate),
                stock_code=tickerSym,
                exchange_code=exchangeCode,
                product_type='options',
                expiry_date=expDate,
                right=right,
                strike_price=strikePrice)
                candles_list += result['Success']
                print(result)
            except Exception as e:
                print('failed to get_historical_data_v2 with error {}'.format(e))
        else: #if num_candles >1000
            while num_candles > 1000:
                newFromDate = timeA.strftime("%Y-%m-%dT%H:%M:%S") + '.000Z'
                newToDate = (timeA+datetime.timedelta(1000*intervals_dict[interval])).strftime("%Y-%m-%dT%H:%M:%S") + '.000Z'
                try:
                    result = breezeObj.get_historical_data_v2(interval,
                    from_date=newFromDate,to_date=newToDate,
                    stock_code=tickerSym,
                    exchange_code=exchangeCode,
                    product_type='options',
                    expiry_date=expDate,
                    right=right,
                    strike_price=strikePrice)
                    print(result)
                    candles_list += result['Success']
                    timeA = timeA+datetime.timedelta(1000*intervals_dict[interval])
                    num_candles -= 1000
                except Exception as e:
                    print('failed to get_historical_data_v2 with error {}'.format(e))
    return candles_list

    intervals_dict = {"1second":1,"1minute":60,"5minute":300,"30minute":1800,"1day":86400}
      candles_list = []
      try:
          result = options_getHistData(breezeObj, interval, tickerSym, exchangeCode, fromDate, toDate, expDate, right, strikePrice)
          rem_candles = result[1]
          if rem_candles == 0: #all done
              print('all done! got {} candles'.format(len(candles_list)))
              candles_list += result[0]['Success']
              return candles_list
          else:
              print('candles remaining are ',len(candles_list))
              if rem_candles >= 1000:
                  fromDate_new = (datetime.datetime.strptime(fromDate, "%d:%m:%Y:%H:%M:%S") + datetime.timedelta(seconds=1000*intervals_dict[interval])).strftime("%Y-%m-%dT%H:%M:%S") + '.000Z'
              else:
                  fromDate_new = (datetime.datetime.strptime(fromDate, "%d:%m:%Y:%H:%M:%S") + datetime.timedelta(seconds=rem_candles*intervals_dict[interval])).strftime("%Y-%m-%dT%H:%M:%S") + '.000Z'
              result = options_getHistData(breezeObj, interval, tickerSym, exchangeCode, fromDate_new, toDate, expDate, right, strikePrice)
              candles_list += result[0]['Success']
      except Exception as err:
          print('failed with err ',err)
